<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
 <!--安全管理器也叫安全管理者-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
       
        <!-- Single realm app.  If you have multiple realms, use the 'realms' property instead. -->
        <property name="sessionMode" value="native"/>
        <property name="realm" ref="jdbcRealm"/>
        <!-- 设置记住我的时间 -->
        <property name="rememberMeManager.cookie.maxAge" value="10000"/>
    </bean>
    <!-- 数据访问器 -->
   <bean id="jdbcRealm" class="shiro.JDBCRealm">
        <property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <property name="hashAlgorithmName" value="MD5"></property> <!-- 加密算法的名称 -->
                <property name="hashIterations" value="1"></property> <!-- 配置加密的次数 -->
            </bean>
        </property>
    </bean>

    <!--生命周期-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
     <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
  
    <!-- shiro 过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!-- 登录用的页面，也就是拦截之后先跳到这个页面 -->
        <property name="loginUrl" value="/"/>
         <!-- 登录成功之后跳转的页面 -->
        <property name="successUrl" value="/newleft"/>
         <!-- 未认证跳转的页面 -->
        <property name="unauthorizedUrl" value="/s/unauthorized"/>
        <!-- The 'filters' property is not necessary since any declared javax.servlet.Filter bean
             defined will be automatically acquired and available via its beanName in chain
             definitions, but you can perform overrides or parent/child consolidated configuration
             here if you like: -->
        <!-- <property name="filters">
            <util:map>
                <entry key="aName" value-ref="someFilterPojo"/>
            </util:map>
        </property> -->
        <!-- 设置访问的条件 比如 默认anon 访问  login 登陆访问  log -->
        <property name="filterChainDefinitions">
            <value>
                / = anon
                /loginadmin = anon
                /css/** = anon
                /fonts/**=anon
                /javascript/**=anon
                /js/**=anon
                /img/**=anon
                /right.jsp=user 
                 
                #认证或者记住我之后才能访问
                /outlogin = logout
                #下面的/**不是所有是除了上面之外的
                # everything else requires authentication:
                /** = user
            </value>
        </property>
    </bean>


</beans>
