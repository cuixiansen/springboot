/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-10-10 02:02:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    </head>\r\n");
      out.write("\t<link href=\"css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("   \r\n");
      out.write("      <script src=\"javascript/jQuery-1.12.4.js\"></script>\r\n");
      out.write("      <script src=\"js/bootstrap.min.js\"></script>\r\n");
      out.write("      <!-- ===============  bootstrap-table插件使用   =========================== -->\r\n");
      out.write("<script src=\"javascript/table/bootstrap-table.js\"></script>\r\n");
      out.write("<link href=\"javascript/table/bootstrap-table.css\" rel=\"stylesheet\" />\r\n");
      out.write("<script src=\"javascript/table/locale/bootstrap-table-zh-CN.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<table id=\"catetable\"></table>\r\n");
      out.write("</body>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(\"#catetable\").bootstrapTable({\r\n");
      out.write("\turl : 'cateServlet?op=showCateByPage',\r\n");
      out.write("\tmethod : 'get',\r\n");
      out.write("\t\t\r\n");
      out.write("     striped: true,                      //是否显示行间隔色\r\n");
      out.write("     cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）\r\n");
      out.write("     pagination: true,                   //是否显示分页（*）\r\n");
      out.write("     sortable: false,                     //是否启用排序\r\n");
      out.write("     sortOrder: \"asc\",                   //排序方式\r\n");
      out.write("    // queryParams: oTableInit.queryParams,//传递参数（*）\r\n");
      out.write("     sidePagination: \"server\",           //分页方式：client客户端分页，server服务端分页（*）\r\n");
      out.write("     pageNumber:1,                       //初始化加载第一页，默认第一页\r\n");
      out.write("     pageSize: 5,                       //每页的记录行数（*）\r\n");
      out.write("     pageList: [5,10, 25, 50, 100],        //可供选择的每页的行数（*）\r\n");
      out.write("     \r\n");
      out.write("     showColumns: true,                  //是否显示所有的列\r\n");
      out.write("     showRefresh: true,                  //是否显示刷新按钮\r\n");
      out.write("     minimumCountColumns: 2,             //最少允许的列数\r\n");
      out.write("     clickToSelect: true,                //是否启用点击选中行\r\n");
      out.write("   \r\n");
      out.write("     columns: [ {\r\n");
      out.write("         field: 'cgID',\r\n");
      out.write("         title: '目录ID'\r\n");
      out.write("     }, {\r\n");
      out.write("         field: 'cg_name',\r\n");
      out.write("         title: '目录名称'\r\n");
      out.write("     }, {\r\n");
      out.write("         field: 'cg_desc',\r\n");
      out.write("         title: '说明'\r\n");
      out.write("     },{\r\n");
      out.write("    \t field: 'cgID',\r\n");
      out.write("    \t formatter: autoadd,\r\n");
      out.write("         title: '操作'\r\n");
      out.write("     }]\r\n");
      out.write("     \r\n");
      out.write(" });\r\n");
      out.write(" \r\n");
      out.write("/*$.ajax({ \r\n");
      out.write("     url:\"cateServlet\",\r\n");
      out.write("     type:\"post\",\r\n");
      out.write("     data:{\r\n");
      out.write("    \t \"op\":\"showCateByPage\" ,\r\n");
      out.write("    \t \"offset\":0,\r\n");
      out.write("    \t \"limit\":5\r\n");
      out.write("  \t  \r\n");
      out.write("  \t\r\n");
      out.write("    \t \r\n");
      out.write("    \t \r\n");
      out.write("    \t \r\n");
      out.write("     },\r\n");
      out.write("    success:function(msg){\r\n");
      out.write("    \talert(msg);\r\n");
      out.write("    \t}\r\n");
      out.write(" \r\n");
      out.write(" });\r\n");
      out.write("*/\r\n");
      out.write("//操作方法\r\n");
      out.write("function autoadd(value, row ,index){\r\n");
      out.write("\t return \"<a calss='btn' onclick=del('\"+value+\"')>删除</a>&nbsp;&nbsp;&nbsp;&nbsp;\"+\r\n");
      out.write("\t \"<a calss='btn' data-toggle='modal' data-target='#myModal' onclick=modify('\"+value+\"')>修改</a>\"\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
